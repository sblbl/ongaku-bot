require('dotenv').config()
const axios = require('axios')
const { GoogleSpreadsheet } = require('google-spreadsheet')
const { JWT } = require('google-auth-library')

exports.searchTrack = async (track, artist) => {
	const token = process.env.DISCOGS_TOKEN
	
	let config = {
		method: 'get',
		maxBodyLength: Infinity,
		url: `https://api.discogs.com/database/search?query=${track}&token=${token}&artist=${artist}`
	}

	const response = await axios.request(config)
	const result = response.data.results[0]
	//console.log(JSON.stringify(result, null, 4))

	const data = {
		title: result.title,
		genre: result.genre,
		style : result.style,
		link: result.resource_url,
		cover : result.cover_image
	}

	await writeTrack(data)

	return data
}

writeTrack = async data => {
	console.log(data)
	// Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
	const serviceAccountAuth = new JWT({
		// env var values here are copied from service account credentials generated by google
		// see "Authentication" section in docs for more info
		email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
		key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/g, "\n"),
		scopes: [
			'https://www.googleapis.com/auth/spreadsheets',
		],
	})
	const doc = new GoogleSpreadsheet(process.env.GOOGLE_SPREADSHEET_ID, serviceAccountAuth)
	await doc.loadInfo() // loads document properties and worksheets
	//console.log(doc.title)
	const sheet = doc.sheetsByIndex[0]
	//console.log(sheet.title)

	const artist = data.title.split(' - ')[0]
	let track = data.title.split(' - ')[1]
	if (track.includes(' / ')) {
		track = track.split(' / ')[1]
	}

	await sheet.addRow({ 
		track: track,
		artist: artist,
		genre: data.genre.toString(),
		style: data.style.toString(),
		link: data.link,
		cover: data.cover,
	})
}